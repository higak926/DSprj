package kajitool.dao.mapper;

import java.util.List;
import kajitool.dao.model.RecipeDetailEntity;
import kajitool.dao.model.RecipeDetailEntityExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface RecipeDetailEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @SelectProvider(type=RecipeDetailEntitySqlProvider.class, method="countByExample")
    long countByExample(RecipeDetailEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @DeleteProvider(type=RecipeDetailEntitySqlProvider.class, method="deleteByExample")
    int deleteByExample(RecipeDetailEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @Delete({
        "delete from public.recipe_detail",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @Insert({
        "insert into public.recipe_detail (id, recipe_id, ",
        "material_id, quantity)",
        "values (#{id,jdbcType=BIGINT}, #{recipeId,jdbcType=BIGINT}, ",
        "#{materialId,jdbcType=BIGINT}, #{quantity,jdbcType=INTEGER})"
    })
    int insert(RecipeDetailEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @InsertProvider(type=RecipeDetailEntitySqlProvider.class, method="insertSelective")
    int insertSelective(RecipeDetailEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @SelectProvider(type=RecipeDetailEntitySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="recipe_id", property="recipeId", jdbcType=JdbcType.BIGINT),
        @Result(column="material_id", property="materialId", jdbcType=JdbcType.BIGINT),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.INTEGER)
    })
    List<RecipeDetailEntity> selectByExample(RecipeDetailEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, recipe_id, material_id, quantity",
        "from public.recipe_detail",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="recipe_id", property="recipeId", jdbcType=JdbcType.BIGINT),
        @Result(column="material_id", property="materialId", jdbcType=JdbcType.BIGINT),
        @Result(column="quantity", property="quantity", jdbcType=JdbcType.INTEGER)
    })
    RecipeDetailEntity selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @UpdateProvider(type=RecipeDetailEntitySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") RecipeDetailEntity record, @Param("example") RecipeDetailEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @UpdateProvider(type=RecipeDetailEntitySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") RecipeDetailEntity record, @Param("example") RecipeDetailEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @UpdateProvider(type=RecipeDetailEntitySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(RecipeDetailEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.recipe_detail
     *
     * @mbg.generated
     */
    @Update({
        "update public.recipe_detail",
        "set recipe_id = #{recipeId,jdbcType=BIGINT},",
          "material_id = #{materialId,jdbcType=BIGINT},",
          "quantity = #{quantity,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(RecipeDetailEntity record);
}